server:
  port: 9000

spring:
  cloud:
    gateway:
#      globalcors: # 全局的跨域处理
#        add-to-simple-url-handler-mapping: true # 解决options请求被拦截问题,options浏览器询问是否允许跨域
#        corsConfigurations:
#          '[/**]':
#            allowedOrigins: # 允许哪些网站的跨域请求
#              - "http://localhost:8090"
#            allowedMethods: # 允许的跨域ajax的请求方式
#              - "GET"
#              - "POST"
#              - "DELETE"
#              - "PUT"
#              - "OPTIONS"
#            allowedHeaders: "*" # 允许在请求中携带的头信息
#            allowCredentials: true # 是否允许携带cookie
#            maxAge: 360000 # 这次跨域检测的有效期
      routes: # 网关路由配置
        - id: auth-service
          uri: lb://jw-server-auth
          predicates:
            - Path=/auth/**
        - id: system-service # 路由id，自定义，只要唯一即可
          uri: lb://system-service # 路由的目标地址 lb就是负载均衡load bance，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/system/** # 这个是按照路径匹配，只要以/user/开头就符合要求
        - id: file-service
          uri: lb://file-service
          predicates:
            - Path=/file/**,/static/**
        - id: deeplearning-service
          uri: lb://deeplearning-service
          predicates:
            - Path=/deeplearning/**
        - id: blog-service
          uri: lb://blog-service
          predicates:
            - Path=/blog/**


#
## 是否开启本地缓存
#local-cache:
#  enabled: false
#
## 全局参数设置
#ribbon:
#  ReadTimeout: 120000
#  ConnectTimeout: 10000
#  SocketTimeout: 10000
#  MaxAutoRetries: 0
#  MaxAutoRetriesNextServer: 1

#hystrix:
#  command:
#    default:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 40000

#feign:
#  httpclient:
#    enabled: true
#  okhttp:
#    enabled: false
#  sentinel:  # 开启feign对sentinel的支持

#    enabled: false
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jw_server.blog.service.dao.mapper.BlogCommentMapper">

    <select id="getFrontCommentPageVO" resultType="com.jw_server.blog.service.dao.vo.BlogFrontCommentVO">
        SELECT
            bc.comment_id, bc.article_id, bc.floor_comment_id, bc.user_id,
            su1.nickname, su1.avatar, bc.reply_comment_id, bc.reply_user_id,
            su2.nickname AS reply_nickname, bc.comment_content, bc.create_time
        FROM
            blog_comment AS bc
            LEFT JOIN sys_user AS su1 ON bc.user_id = su1.id
            LEFT JOIN sys_user AS su2 ON bc.reply_user_id = su2.id
        WHERE
            bc.comment_type = #{commentType}
            <if test="commentType == 'article'">
                AND bc.article_id = #{articleId}
            </if>
            AND bc.floor_comment_id = #{floorCommentId}
            AND bc.comment_check = '1'
            AND bc.is_deleted='0'
        ORDER BY bc.create_time
    </select>


    <delete id="deleteComment" parameterType="java.lang.Integer">
        DELETE
        FROM
            blog_comment
        WHERE
            comment_id = #{commentId}
            OR floor_comment_id = #{commentId}
            OR reply_comment_id = #{commentId}
    </delete>


    <select id="getAdminCommentPageList" resultType="com.jw_server.blog.service.dao.vo.BlogAdminCommentPageVO">
        SELECT
            bc.comment_id, su1.nickname, su1.avatar, su2.nickname as to_nickname,
            bc.comment_type, bc.comment_content, bc.comment_check, bc.create_time
        FROM
            blog_comment AS bc
            LEFT JOIN sys_user AS su1 ON bc.user_id = su1.id
            LEFT JOIN sys_user AS su2 ON bc.reply_user_id = su2.id
        WHERE
            TRUE
            AND bc.is_deleted='0'
            <if test="queryCommentPageDTO.nickname !=null and queryCommentPageDTO.nickname != ''" >
                AND su1.nickname like concat('%',#{queryCommentPageDTO.nickname} ,'%')
            </if>
            <if test="queryCommentPageDTO.commentType !=null and queryCommentPageDTO.commentType != ''" >
                AND bc.comment_type like concat('%',#{queryCommentPageDTO.commentType} ,'%')
            </if>
            <if test="queryCommentPageDTO.commentCheck !=null and queryCommentPageDTO.commentCheck != ''" >
                AND bc.comment_check = #{queryCommentPageDTO.commentCheck}
            </if>
        ORDER BY bc.create_time DESC
    </select>
    <select id="getFrontCommentCounts" resultType="java.lang.Integer">
        SELECT
            Count(*)
        FROM
            blog_comment
        WHERE
            article_id = #{articleId}
            AND comment_check = '1'
            AND is_deleted='0'
    </select>

    <update id="updateCommentCheckBatch" parameterType="java.util.List">
        UPDATE
            blog_comment AS bc
        SET
            bc.comment_check = '1'
        WHERE
            bc.comment_id IN
            <foreach collection="list" index="index" item="id" separator="," open="(" close=")">
                 #{id}
            </foreach>
    </update>

    <delete id="deleteCommentByArticleId" parameterType="java.lang.Integer">
        DELETE
        FROM
            blog_comment
        WHERE
            article_id = #{articleId}
    </delete>
</mapper>
